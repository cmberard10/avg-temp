// Code generated by MockGen. DO NOT EDIT.
// Source: internal/services/dao.go

// Package mockSCRIPTDao is a generated GoMock package.
package mockSCRIPTDao

import (
	models "city-temp/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDAO is a mock of DAO interface
type MockDAO struct {
	ctrl     *gomock.Controller
	recorder *MockDAOMockRecorder
}

// MockDAOMockRecorder is the mock recorder for MockDAO
type MockDAOMockRecorder struct {
	mock *MockDAO
}

// NewMockDAO creates a new mock instance
func NewMockDAO(ctrl *gomock.Controller) *MockDAO {
	mock := &MockDAO{ctrl: ctrl}
	mock.recorder = &MockDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDAO) EXPECT() *MockDAOMockRecorder {
	return m.recorder
}

// GetCityData mocks base method
func (m *MockDAO) GetCityData() (*models.City, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCityData")
	ret0, _ := ret[0].(*models.City)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCityData indicates an expected call of GetCityData
func (mr *MockDAOMockRecorder) GetCityData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCityData", reflect.TypeOf((*MockDAO)(nil).GetCityData))
}

// GetCurrentTemperatureForCoordinates mocks base method
func (m *MockDAO) GetCurrentTemperatureForCoordinates(coord models.Coordinate) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentTemperatureForCoordinates", coord)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentTemperatureForCoordinates indicates an expected call of GetCurrentTemperatureForCoordinates
func (mr *MockDAOMockRecorder) GetCurrentTemperatureForCoordinates(coord interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentTemperatureForCoordinates", reflect.TypeOf((*MockDAO)(nil).GetCurrentTemperatureForCoordinates), coord)
}
